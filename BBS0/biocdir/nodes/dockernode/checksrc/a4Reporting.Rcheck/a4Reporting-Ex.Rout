
R Under development (unstable) (2015-02-23 r67879) -- "Unsuffered Consequences"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "a4Reporting"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "a4Reporting-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('a4Reporting')
Loading required package: annaffy
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following object is masked from ‘package:stats’:

    xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, as.vector, cbind, colnames, do.call, duplicated,
    eval, evalq, get, intersect, is.unsorted, lapply, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, rank, rbind,
    rep.int, rownames, sapply, setdiff, sort, table, tapply, union,
    unique, unlist, unsplit

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: GO.db
Loading required package: AnnotationDbi
Loading required package: stats4
Loading required package: GenomeInfoDb
Loading required package: S4Vectors
Loading required package: IRanges

Attaching package: ‘AnnotationDbi’

The following object is masked from ‘package:GenomeInfoDb’:

    species

Loading required package: DBI

Loading required package: KEGG.db

KEGG.db contains mappings based on older data because the original
  resource was removed from the the public domain before the most
  recent update was produced. This package should now be considered
  deprecated and future versions of Bioconductor may not have it
  available.  Users who want more current data are encouraged to look
  at the KEGGREST or reactome.db packages

> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("annotationTable-class")
> ### * annotationTable-class
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: annotationTable-class
> ### Title: Class "annotationTable"
> ### Aliases: annotationTable-class show,annotationTable-method
> ### Keywords: classes
> 
> ### ** Examples
> 
>   showClass("annotationTable")
Class "annotationTable" [package "a4Reporting"]

Slots:
                                          
Name:  displayData displayCols    hrefData
Class:  data.frame        list  data.frame
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("annotationTable-class", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("annotationTable")
> ### * annotationTable
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: annotationTable
> ### Title: Function to Create an annotationTable
> ### Aliases: annotationTable
> ### Keywords: manip
> 
> ### ** Examples
> 
>   ## some dummy data
>   dData <- data.frame(someSymbol = LETTERS[1:5], 
+                       accessionNumber = 
+                         c("X83928", "V00540", "U21090", "L38487", "M34057"))
> 
>   at <- annotationTable(displayData = dData, 
+                         displayCols = list(accessionNumber = "EntrezId"))
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("annotationTable", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("xtable-methods")
> ### * xtable-methods
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: xtable-methods
> ### Title: Methods for Function xtable in Package 'annotationTable'
> ### Aliases: xtable-methods
> ###   xtable,annotationTable,missing,missing,missing,missing,missing-method
> ###   xtable,annotationTable,ANY,ANY,ANY,ANY,ANY-method
> ###   xtable,annotationTable,ANY,ANY,ANY,numeric,ANY-method
> ###   xtable.topTableGlmnet xtable.topTableLognet xtable.topTableElnet
> ###   xtable.pamClassConfusionTable xtable.topTablePam
> ### Keywords: methods manip
> 
> ### ** Examples
> 
>   ## some dummy data
>   dData <- data.frame(someSymbol = LETTERS[1:5], 
+                       accessionNumber = 
+                         c("X83928", "V00540", "U21090", "L38487", "M34057"))
> 
>   at <- annotationTable(displayData = dData, 
+                         displayCols = list(accessionNumber = "EntrezId"))
>   xat <- xtable(at)
>   print(xat, include.rownames = FALSE)
% latex table generated in R 3.2.0 by xtable 1.7-4 package
% Wed Feb 25 22:14:37 2015
\begin{table}[ht]
\centering
\begin{tabular}{ll}
  \hline
someSymbol & accessionNumber \\ 
  \hline
A & \href{http://www.ncbi.nlm.nih.gov/gene/X83928}{X83928} \\ 
  B & \href{http://www.ncbi.nlm.nih.gov/gene/V00540}{V00540} \\ 
  C & \href{http://www.ncbi.nlm.nih.gov/gene/U21090}{U21090} \\ 
  D & \href{http://www.ncbi.nlm.nih.gov/gene/L38487}{L38487} \\ 
  E & \href{http://www.ncbi.nlm.nih.gov/gene/M34057}{M34057} \\ 
   \hline
\end{tabular}
\end{table}
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("xtable-methods", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  2.885 0.059 2.959 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
